workspace:
  base: /go
  path: src/github.com/cblomart/registry-token-ldap

# clone with tags
clone:
  git:
    image: plugins/git
    tags: true

pipeline:
  checkgo:
    name: check go
    image: cblomart/gobasebuild
    commands:
    - gosimple ./...
    - gofmt -s -l $(find ./ -name "*.go" | egrep -v "/vendor/")
    - go vet ./...
    - golint $(find ./ -name "*.go" | egrep -v "/vendor/")
    - ineffassign ./
    - gosec ./...
    - go tool vet ./..
  tests:
    name: tests
    image: cblomart/gobasebuild
    commands:
      - go test -v --cover
  buildamd64:
    name: build amd64
    group: build
    image: golang:latest
    environment:
    - CGO=0
    - GOOS=linux
    - GOARCH=amd64
    commands:
    - mkdir -p releases/amd64
    - go build -ldflags '-s -w' -a -o ./releases/amd64/registry-token-ldap .
  buildarm:
    name: build arm
    group: build
    image: golang:latest
    environment:
    - CGO=0
    - GOOS=linux
    - GOARCH=arm
    - GOARM=5
    commands:
    - mkdir -p releases/arm
    - go build -ldflags '-s -w' -a -o ./releases/arm/registry-token-ldap .
    when:
      event: [ tag ]
  compressamd64:
    name: compress amd64
    group: compress
    image: gruebel/upx
    commands:
    - upx --best --lzma -qq ./releases/amd64/registry-token-ldap
    - tar -czf ./releases/registry-token-ldap-${DRONE_TAG}.amd64.tgz -C ./releases/amd64/ registry-token-ldap
  compressarm:
    name: compress arm
    group: compress
    image: gruebel/upx
    commands:
    - upx --best --lzma -qq ./releases/arm/registry-token-ldap
    - tar -czf ./releases/registry-token-ldap-${DRONE_TAG}.arm.tgz -C ./releases/arm/ registry-token-ldap
    when:
      event: [ tag ]
  dockeramd64:
    name: build docker image amd64
    image: docker
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    commands:
    - docker image rm cblomart/registry-token-ldap cblomart/registry-token-ldap:arm --force
    - docker build --build-arg release_type=amd64 -t cblomart/registry-token-ldap -t cblomart/registry-token-ldap:${DRONE_COMMIT_SHA:0:8} .
  dockerarm:
    name: build docker image arm
    image: docker
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    commands:
    - docker build -t cblomart/registry-token-ldap:arm -t cblomart/rpi-registry-token-ldap:${DRONE_COMMIT_SHA:0:8} --build-arg release_type=arm .
    when:
      event: [ tag ]
  dockertags:
    name: set docker tags
    image: docker
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    commands:
    - docker tag "cblomart/registry-token-ldap:arm" "cblomart/registry-token-ldap:arm-${DRONE_TAG}" 
    - docker tag "cblomart/registry-token-ldap:arm" "cblomart/registry-token-ldap:arm-`echo "${DRONE_TAG}" | cut -d. 1,2`"
    - docker tag "cblomart/registry-token-ldap:arm" "cblomart/registry-token-ldap:arm-`echo "${DRONE_TAG}" | cut -d. 1`"
    - docker tag "cblomart/registry-token-ldap" "cblomart/registry-token-ldap:${DRONE_TAG}"
    - docker tag "cblomart/registry-token-ldap" "cblomart/registry-token-ldap:`echo "${DRONE_TAG}" | cut -d. 1,2`"
    - docker tag "cblomart/registry-token-ldap" "cblomart/registry-token-ldap:`echo "${DRONE_TAG}" | cut -d. 1`"
    when:
      event: [ tag ]
  dockerpush:
    name: push to docker
    image: docker
    secrets: [ docker_username, docker_password ]
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    commands:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    - docker push cblomart/registry-token-ldap
  release:
    name: push to github
    image: plugins/github-release
    secrets: [ github_token ]
    files:
      - releases/*.tgz
    checksum:
      - sha256
    when:
      event: [ tag ]
