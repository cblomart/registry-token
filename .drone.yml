workspace:
  base: /go
  path: src/github.com/cblomart/registry-token-ldap

# clone with tags
clone:
  git:
    image: plugins/git
    tags: true

pipeline:
  checkgo:
    name: check go
    image: cblomart/gobasebuild
    commands:
    - gosimple ./...
    - gofmt -s -l $(find ./ -name "*.go" | egrep -v "/vendor/")
    - go vet ./...
    - golint $(find ./ -name "*.go" | egrep -v "/vendor/")
    - ineffassign ./
    - gosec ./...
    - go tool vet ./..
  checksnyk:
    name: snyck check
    image: cblomart/gobasebuild
    secrets: [ snyk_token ]
    commands:
    - snyk auth $SNYK_TOKEN
    - snyk test
  buildamd64:
    name: build amd64
    group: build
    image: golang:latest
    environment:
    - CGO=0
    - GOOS=linux
    - GOARCH=amd64
    commands:
    - mkdir -p releases/amd64
    - go build -ldflags '-s -w' -a -o ./releases/amd64/registry-token-ldap .
  buildarm:
    name: build arm
    group: build
    image: golang:latest
    environment:
    - CGO=0
    - GOOS=linux
    - GOARCH=arm
    - GOARM=5
    commands:
    - mkdir -p releases/arm
    - go build -ldflags '-s -w' -a -o ./releases/arm/registry-token-ldap .
    when:
      event: [ tag ]
  compressamd64:
    name: compress amd64
    group: compress
    image: gruebel/upx
    commands:
    - upx --best --lzma -q ./releases/amd64/registry-token-ldap
    - tar -czf ./releases/registry-token-ldap-${DRONE_TAG}-amd64.tgz -C ./releases/amd64/ registry-token-ldap
  compressarm:
    name: compress arm
    group: compress
    image: gruebel/upx
    commands:
    - upx --best --lzma -q ./releases/arm/registry-token-ldap
    - tar -czf ./releases/registry-token-ldap-${DRONE_TAG}-arm.tgz -C ./releases/arm/ registry-token-ldap
    when:
      event: [ tag ]
